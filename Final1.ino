byte rowPin[4] = {3,4,5,6};
byte colPin[4] = {7,8,A0,10};
byte enable = 11;
byte valuePin = 12 ;

int keys[10] = {1021,1012,1002,993,983,974,964,955,947,938};

int currentRow = 0;
int currentCol = 0;
int currentSymbol = -1;
unsigned long currentTime = 0;

bool isEmoji = false;
bool isChanging = false;
int password_counter = 0;
int chnagePassword[4] = {1,2,1,2};
int password[4] = {1,2,3,4};
int inputSequence[4] = {-1,-1,-1,-1};
 
bool binaryIndex[10][4] = {
{0,0,0,0},
{0,0,0,1},
{0,0,1,0},  
{0,0,1,1},
{0,1,0,0},
{0,1,0,1},
{0,1,1,0},
{0,1,1,1},
{1,0,0,0},
{1,0,0,1}
};

byte symbol [10][10] = {}; 

short numbers[10][10]={
{508,260,260,260,260,260,260,260,260,508},
{16,48,80,16,16,16,16,16,16,124},
{508,4,4,4,508,256,256,256,256,508},
{508,4,4,4,508,4,4,4,4,508},
{260,260,260,260,508,4,4,4,4,4},
{510,256,256,256,510,2,2,2,2,510},
{510,256,256,256,510,258,258,258,258,510},
{255,2,4,8,16,32,64,128,256,512},
{252,132,132,132,132,252,132,132,132,252},
{252,132,132,132,132,252,4,4,4,252}
};

short emojis[10][10]={
{510,771,717,975,513,645,645,633,771,510},
{510,513,717,975,513,561,585,645,513,510},
{510,513,843,975,513,633,585,633,513,510},
{510,513,633,585,645,513,717,717,513,510},
{513,771,911,510,510,252,252,120,120,48},
{513,771,783,414,462,228,240,120,120,48},
{48,120,120,252,252,252,510,1023,975,390},
{510,771,717,975,513,513,513,513,771,510},
{510,771,717,975,513,513,765,765,771,510},
{510,771,717,717,517,517,561,633,771,510}
};


int speakerOut = 9;
int melody[10] = { 3830,  1912,  1502,  3038,  1601,   2028,  3400,  2864,  2272,  2550};
long tempo = 4000;
int tone_ = 0;
int beat = 8;
unsigned long duration  = 0;

void playTone(int index) {
  tone_ = melody[index];
  duration = beat * tempo;
  unsigned long elapsed_time = 0;
  if (tone_ > 0)
    while (elapsed_time < duration) {
      digitalWrite(speakerOut,HIGH);
      delayMicroseconds(tone_ / 2);
      // DOWN
      digitalWrite(speakerOut, LOW);
      delayMicroseconds(tone_ / 2);
      elapsed_time += (tone_);
    }                
}


void setup() {
  for(int i=0;i<4;i++){
    pinMode(rowPin[i],OUTPUT);
    pinMode(colPin[i],OUTPUT);  
    }
  pinMode(enable,OUTPUT);
  pinMode(valuePin, OUTPUT);
  pinMode(A5,INPUT);
  clearLeds();
  selfTesting();
  Serial.begin(9600);

  pinMode(speakerOut, OUTPUT);
  pinMode(2,INPUT);
  attachInterrupt(digitalPinToInterrupt(2), keyPressed, RISING); 

}

void loop(){
  
    if(currentSymbol != -1 && (unsigned long) (millis()-currentTime) >= 100){
         while(!symbol[currentRow][currentCol] && currentSymbol != -1){
             if(currentCol == 9){
                 currentCol = 0;
                 currentRow +=1;
                 if(currentRow == 10)
                    currentSymbol = -1;
              }
             else
                 currentCol +=1;  
          }
            
         if(currentSymbol != -1 && symbol[currentRow][currentCol]) {
            lightLed(currentRow,currentCol,1);
            currentTime = millis();
            if(currentCol == 9){
                currentCol = 0;
                currentRow +=1;
            }
            else
                currentCol +=1;    
            if(currentRow == 10)
                currentSymbol = -1;  
         }                  
    }
    
}


void keyPressed(){
  int key = analogRead(A5);
  for(int i=0;i<10;i++)
      if(keys[i] == key){
         currentTime = millis(); 
         clearLeds();
         addToSequence(i);
         if(isChanging){
            password[password_counter] = i;
            password_counter++;
            if(password_counter == 4){
              isChanging = false;
              password_counter = 0;
              Serial.println("New password is saved successfully");
              }
            return;  
          }
          
         int m = 0;
         for(m;m<4;m++)
          if(inputSequence[m] != chnagePassword[m])
            break;
         if(m==4){
          Serial.println("Enter new password");
          isChanging = true;
          currentSymbol = -1;
          return;
         }
         
         if(!isEmoji){
           int k=0;
           for(k;k<4;k++){
              if(inputSequence[k] != password[k])
                break;
            }
           if(k==4){         
            Serial.println("Turned into Emoji mode");
            isEmoji = true;
            currentSymbol = -1;
            //tempo = 50000;
            beat = 64;
            playTone(i);
            break;
           }
         }
         else{
           int k=0;
           for(k;k<4;k++){
              if(inputSequence[k] != password[3-k])
                break;
            }
           if(k==4){         
            Serial.println("Turned into Numbers mode");
            isEmoji = false;
            currentSymbol = -1;
            //tempo = 50000;
            beat = 64;
            playTone(i);
            break;
           }
         }
         beat = 8;
         playTone(i);         
         getPattern(i,isEmoji);
         currentSymbol = i;
         currentCol = 0;
         currentRow = 0;
         break;
        }
}

void getPattern(int index,bool isEmo){
  for(int i=0;i<10;i++){
    short x;
    if(!isEmo)
      x = numbers[index][i];
    else
      x = emojis[index][i];
    for(int j=9;j>=0;j--){
        if(x%2)
          symbol[i][j] = 1;
        else
          symbol[i][j] = 0;  
        x /= 2;
      }    
  }
}

void addToSequence(int index){
    for(int i=0;i<4;i++)
        if(inputSequence[i] == -1){
            inputSequence[i]=index;
            return;
          }
     inputSequence[0]=inputSequence[1];
     inputSequence[1]=inputSequence[2];
     inputSequence[2]=inputSequence[3];
     inputSequence[3]=index;    
  }


void selfTesting(){
  for(int i=0;i<10;i++){
    for(int j=0;j<10;j++)
      lightLed(j,i,1);
    delay(200);
    for(int j=0;j<10;j++)
      lightLed(j,i,0);
  }
  for(int i=0;i<10;i++){
    for(int j=0;j<10;j++)
      lightLed(i,j,1);
    delay(200);
    for(int j=0;j<10;j++)
      lightLed(i,j,0);
  }
}


void lightLed(int row,int col,bool val){
  digitalWrite(enable,LOW);
  digitalWrite(valuePin,val);
  for(int i=0;i<4;i++)
    digitalWrite(rowPin[i],binaryIndex[row][i]);
  for(int i=0;i<4;i++)
    digitalWrite(colPin[i],binaryIndex[col][i]);  
  digitalWrite(enable,HIGH);
}

void clearLeds(){
  for(int i=0;i<10;i++)
    for(int j=0;j<10;j++)
      lightLed(i,j,0);
}


   // {{0,1,1,1,1,1,1,1,0,0},{0,1,0,0,0,0,0,1,0,0},{0,1,0,0,0,0,0,1,0,0},{0,1,0,0,0,0,0,1,0,0},{0,1,0,0,0,0,0,1,0,0},{0,1,0,0,0,0,0,1,0,0},{0,1,0,0,0,0,0,1,0,0},{0,1,0,0,0,0,0,1,0,0},{0,1,0,0,0,0,0,1,0,0},{0,1,1,1,1,1,1,1,0,0}},
   // {{0,0,0,0,0,1,0,0,0,0},{0,0,0,0,1,1,0,0,0,0},{0,0,0,1,0,1,0,0,0,0},{0,0,0,0,0,1,0,0,0,0},{0,0,0,0,0,1,0,0,0,0},{0,0,0,0,0,1,0,0,0,0},{0,0,0,0,0,1,0,0,0,0},{0,0,0,0,0,1,0,0,0,0},{0,0,0,0,0,1,0,0,0,0},{0,0,0,1,1,1,1,1,0,0}},
   // {{0,1,1,1,1,1,1,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,1,1,1,1,1,1,1,0,0},{0,1,0,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0,0,0},{0,1,1,1,1,1,1,1,0,0}},
   // {{0,1,1,1,1,1,1,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,1,1,1,1,1,1,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,1,1,1,1,1,1,1,0,0}},
   // {{0,1,0,0,0,0,0,1,0,0},{0,1,0,0,0,0,0,1,0,0},{0,1,0,0,0,0,0,1,0,0},{0,1,0,0,0,0,0,1,0,0},{0,1,1,1,1,1,1,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0}},
   // {{0,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0,0,0},{0,1,1,1,1,1,1,1,1,0},{0,0,0,0,0,0,0,0,1,0},{0,0,0,0,0,0,0,0,1,0},{0,0,0,0,0,0,0,0,1,0},{0,0,0,0,0,0,0,0,1,0},{0,1,1,1,1,1,1,1,1,0}},
  //  {{0,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0,0,0},{0,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,0,0,0,1,0},{0,1,0,0,0,0,0,0,1,0},{0,1,0,0,0,0,0,0,1,0},{0,1,0,0,0,0,0,0,1,0},{0,1,1,1,1,1,1,1,1,0}},
 //   {{0,0,1,1,1,1,1,1,1,1},{0,0,0,0,0,0,0,0,1,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,1,0,0,0},{0,0,0,0,0,1,0,0,0,0},{0,0,0,0,1,0,0,0,0,0},{0,0,0,1,0,0,0,0,0,0},{0,0,1,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0,0,0},{1,0,0,0,0,0,0,0,0,0}},
 //   {{0,0,1,1,1,1,1,1,0,0},{0,0,1,0,0,0,0,1,0,0},{0,0,1,0,0,0,0,1,0,0},{0,0,1,0,0,0,0,1,0,0},{0,0,1,0,0,0,0,1,0,0},{0,0,1,1,1,1,1,1,0,0},{0,0,1,0,0,0,0,1,0,0},{0,0,1,0,0,0,0,1,0,0},{0,0,1,0,0,0,0,1,0,0},{0,0,1,1,1,1,1,1,0,0}},
//    {{0,0,1,1,1,1,1,1,0,0},{0,0,1,0,0,0,0,1,0,0},{0,0,1,0,0,0,0,1,0,0},{0,0,1,0,0,0,0,1,0,0},{0,0,1,0,0,0,0,1,0,0},{0,0,1,1,1,1,1,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,1,0,0},{0,0,1,1,1,1,1,1,0,0}}

//    {{0,1,1,1,1,1,1,1,1,0},{1,1,0,0,0,0,0,0,1,1},{1,0,1,1,0,0,1,1,0,1},{1,1,1,1,0,0,1,1,1,1},{1,0,0,0,0,0,0,0,0,1},{1,0,1,0,0,0,0,1,0,1},{1,0,1,0,0,0,0,1,0,1},{1,0,0,1,1,1,1,0,0,1},{1,1,0,0,0,0,0,0,1,1},{0,1,1,1,1,1,1,1,1,0}},
//    {{0,1,1,1,1,1,1,1,1,0},{1,0,0,0,0,0,0,0,0,1},{1,0,1,1,0,0,1,1,0,1},{1,1,1,1,0,0,1,1,1,1},{1,0,0,0,0,0,0,0,0,1},{1,0,0,0,1,1,0,0,0,1},{1,0,0,1,0,0,1,0,0,1},{1,0,1,0,0,0,0,1,0,1},{1,0,0,0,0,0,0,0,0,1},{0,1,1,1,1,1,1,1,1,0}},
//    {{0,1,1,1,1,1,1,1,1,0},{1,0,0,0,0,0,0,0,0,1},{1,1,0,1,0,0,1,0,1,1},{1,1,1,1,0,0,1,1,1,1},{1,0,0,0,0,0,0,0,0,1},{1,0,0,1,1,1,1,0,0,1},{1,0,0,1,0,0,1,0,0,1},{1,0,0,1,1,1,1,0,0,1},{1,0,0,0,0,0,0,0,0,1},{0,1,1,1,1,1,1,1,1,0}},
//    {{0,1,1,1,1,1,1,1,1,0},{1,0,0,0,0,0,0,0,0,1},{1,0,0,1,1,1,1,0,0,1},{1,0,0,1,0,0,1,0,0,1},{1,0,1,0,0,0,0,1,0,1},{1,0,0,0,0,0,0,0,0,1},{1,0,1,1,0,0,1,1,0,1},{1,0,1,1,0,0,1,1,0,1},{1,0,0,0,0,0,0,0,0,1},{0,1,1,1,1,1,1,1,1,0}},
//    {{1,0,0,0,0,0,0,0,0,1},{1,1,0,0,0,0,0,0,1,1},{1,1,1,0,0,0,1,1,1,1},{0,1,1,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1,1,0},{0,0,1,1,1,1,1,1,0,0},{0,0,1,1,1,1,1,1,0,0},{0,0,0,1,1,1,1,0,0,0},{0,0,0,1,1,1,1,0,0,0},{0,0,0,0,1,1,0,0,0,0}},
//    {{1,0,0,0,0,0,0,0,0,1},{1,1,0,0,0,0,0,0,1,1},{1,1,0,0,0,0,1,1,1,1},{0,1,1,0,0,1,1,1,1,0},{0,1,1,1,0,0,1,1,1,0},{0,0,1,1,1,0,0,1,0,0},{0,0,1,1,1,1,0,0,0,0},{0,0,0,1,1,1,1,0,0,0},{0,0,0,1,1,1,1,0,0,0},{0,0,0,0,1,1,0,0,0,0}},
//    {{0,0,0,0,1,1,0,0,0,0},{0,0,0,1,1,1,1,0,0,0},{0,0,0,1,1,1,1,0,0,0},{0,0,1,1,1,1,1,1,0,0},{0,0,1,1,1,1,1,1,0,0},{0,0,1,1,1,1,1,1,0,0},{0,1,1,1,1,1,1,1,1,0},{1,1,1,1,1,1,1,1,1,1},{1,1,1,1,0,0,1,1,1,1},{0,1,1,0,0,0,0,1,1,0}},
//    {{0,1,1,1,1,1,1,1,1,0},{1,1,0,0,0,0,0,0,1,1},{1,0,1,1,0,0,1,1,0,1},{1,1,1,1,0,0,1,1,1,1},{1,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,1},{1,1,0,0,0,0,0,0,1,1},{0,1,1,1,1,1,1,1,1,0}},
//    {{0,1,1,1,1,1,1,1,1,0},{1,1,0,0,0,0,0,0,1,1},{1,0,1,1,0,0,1,1,0,1},{1,1,1,1,0,0,1,1,1,1},{1,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,1},{1,0,1,1,1,1,1,1,0,1},{1,0,1,1,1,1,1,1,0,1},{1,1,0,0,0,0,0,0,1,1},{0,1,1,1,1,1,1,1,1,0}},
//    {{0,1,1,1,1,1,1,1,1,0},{1,1,0,0,0,0,0,0,1,1},{1,0,1,1,0,0,1,1,0,1},{1,0,1,1,0,0,1,1,0,1},{1,0,0,0,0,0,0,1,0,1},{1,0,0,0,0,0,0,1,0,1},{1,0,0,0,1,1,0,0,0,1},{1,0,0,1,1,1,1,0,0,1},{1,1,0,0,0,0,0,0,1,1},{0,1,1,1,1,1,1,1,1,0}}  
